<?php

namespace WordWarsBundle\Repository;

/**
 * MyWordWarRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MyWordWarRepository extends \Doctrine\ORM\EntityRepository
{
  public function isUserInWW($user) {
    $date = new \Datetime(date('Y-m-d') . ' 00:00:00');

    $em = $this->createQueryBuilder('w');
    $em
      ->where('w.date >= :date')
      ->setParameter('date', $date);
    $em->join('w.word_war', 'ww');
    $em->andWhere('ww.id = w.word_war');
    $em
      ->andWhere('ww.end <= :date')
      ->setParameter('date', $date);
    $em
      ->andWhere('w.user = :user')
      ->setParameter('user', $user);

    return $em->getQuery()->getOneOrNullResult();
  }

  public function findByWWId($ww_id, $user) {
    $date = new \Datetime(date('Y-m-d') . ' 00:00:00');

    $query = $this->createQueryBuilder('mww');

    $query->join('mww.word_war', 'ww', 'WITH', 'ww.end > :date')
          ->setParameter('date', $date);

    $query->where('mww.word_war = :ww_id')
          ->setParameter('ww_id', $ww_id);

    $query->andWhere('mww.user = :user')
          ->setParameter('user', $user);

    return $query->getQuery()->getOneOrNullResult();
  }

  public function findWWParticipants($ww) {
    $date = new \Datetime(date('Y-m-d') . ' 00:00:00');

    $query = $this->createQueryBuilder('mww');

    $query->where('mww.word_war = :ww')
          ->setParameter('ww', $ww);

    $query->orderBy('mww.wordCount', 'DESC');

    return $query->getQuery()->getResult();
  }
}
